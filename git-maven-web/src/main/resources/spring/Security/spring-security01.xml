<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <security:http auto-config="true">
        <!--3.1版本后，auto-config='true'时，不能使用，要用hasRole的方式-->
        <!--<security:intercept-url pattern="/**" access="ROLE_USER"/>-->
        <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="user" password="user" authorities="ROLE_USER"/>
                <security:user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN"/>
            </security:user-service>
        </security:authentication-provider>
        <security:authentication-provider>
            <!--还可以从users.properties文件中读取-->
            <security:user-service properties="/WEB-INF/spring/security/users.properties"/>
        </security:authentication-provider>
    </security:authentication-manager>

</beans>